{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red42\green55\blue62;}
{\*\expandedcolortbl;;\cssrgb\c21569\c27843\c30980;}
\margl1440\margr1440\vieww16060\viewh16380\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 *** JAVASCRIPT I - INTRO  NOTES ***\
\
\
PRIMITIVE TYPES:\
boolean		true/false\
number		10, 3.14, -0.0045\
string			\'93Hello CodeUp\'94\
undefined		unassigned value/type\
null			lack of value	keyword\
NaN			not a numeric value\
\
\
\
ESCAPE CHARACTER:\
\\	escape\
\
\
\
ARITHMETIC:\
+	addition\
-	subtraction\
*	multiplication\
/	division\
%	modulus (remainder)\
\
\
\
CONCATINENATION:\
\'93Hello, \'94 + \'93World!\'94 		\'93Hello, World!\'94\
\
\
\
LOGICAL BOOLEAN:\
&&	AND	true if both operands are true, false otherwise\
||	OR	true if wither operand is true, false otherwise\
!	NOT	the opposite\
\
\
\
TRUTH TABLES:\
&&\
true && true		true\
true && false		false\
false && true		false\
false && false	false\
\
||\
true || true		true\
true || false		true\
false || true		true\
false || false		false\
\
!\
!true			false\
!false			true\
\
\
\
COMPARISON:\
==	equal value (loose)\
===	equal type & value (strict)\
!=	not equal value\
!==	not equal type or/and value\
>	greater than\
>=	greater than or equal to\
<	less than\
<= 	less than or equal to\
\
\
\
VARIABLES: \
var name = value;				define a variable\
name;						print variable value\
var name = value, name2 = value2;	define multiple variables\
var name;					undefined\
\
\
\
CONSTANTS:\
const name = value;		define a read only variable\
\
\
\
ASSIGNMENT OPERATOR:\
lvalue = rvalue		assign rvalue to lvalue\
\
\
\
SHORTHAND ASSIGNMENT OPERATORS:\
+=	var = var + __\
-=	var = var - __\
*=	var = var * __\
/=	var = var / __\
%=	var = var % __\
\
\
\
UNARY OPERATORS:\
+	plus\
-	negation\
++	increment\
- -	decrement\
\
\
\
STRING & NUMBER CONVERSION\
.toString();			convert number to string\
.parseInt();			convert string to number\
.parseFloat();			convert string to float\
Number(string);		convert string to number\
.toFixed(number);		specify decimal precision\
isNaN(string);		determine if string can convert to number\
\
\
\
STRING FUNCTIONS:\
.length;			returns number of chars in string	\
.indexOf(char);		returns index of first occurance\
.replace(from, to);		returns a copy w/ substitutions\
.substring(from, to);		returns a subset from indexes\
.toUpperCase();		returns a copy in uppercase\
.toLowerCase();		returns a copy in lowercase\
.trim();				returns a copy w/out whitespace \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
}