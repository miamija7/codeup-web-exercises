
*** CSS I ***

------- OVERVIEW -------

CSS:
- Cascading Style Sheets
- allows us to customize the presentation of a web page
- colors, fonts, layout, and more
- provides for the separation of the document content from the presentation


------- INTRO TO CSS -------

3 ways to apply css styles:
   1. Element Style Attribute
   2. Inline/Embedded Stylesheet
   3. External Stylesheet


Element Style:
    <h1 style="color:blue;text-decoration:underline;">Hello, CSS!</h1>


Inline/Embedded Stylesheet (inside head):
    <style>
        .fancy-header {
            color: blue;
            text-decoration: underline;
        }
    </style>


External Stylesheet (inside head):
- File: css/style.css
- File: index.html
    <link rel="stylesheet" href="css/style.css">


- Elements in adding a stylesheet in html
    link            a void element
    rel             specifies stylesheet
    href            path to stylesheet


Comments:
    /*...*/


------- CSS SELECTORS -------


Selectors:
- selectively apply styles to specific elements or groups of elements
- many types of CSS selectors
Selector	Syntax
Element	    The name of the element
ID	        The name of the id, preceded by a #
Class	    The name of the class, preceded by a


Basic Selectors:
    selector {
        property1: value;
        property2: value;
    }


Multiple Selectors:
    selector1, selector2 {
        property1: value;
        property2: value;
    }


Combination Classes:
    .fancy-header {
        color: blue;
    }
    .extra-large {
        font-size: 200px;
    }
    <h1 class="fancy-header extra-large">Header Text</h1>


Descendant Selector:
    #container h1 {
        color: blue;
    }


Direct-Child Selector:
    #container>h1 {
        color: blue;
    }


Combine Selectors:
    h1.fancy-header {
        color: blue;
    }
    h2.fancy-header {
        color: green;
    }


Pseudo Classes:
    selector:pseudo-class {
        property1: value;
        property2: value;
    }

    LINK EXAMPLE:
    /* unvisited link (:link) */
    a:link {
        color:red;
    }

    /* visited link (:visited) */
    a:visited {
        color:black;
    }

    /* mouse hover over link (:hover) */
    a:hover {
        color:blue;
    }

    /* active/selected link (:active) */
    a:active {
        color:green;
    }


Specificity
- cascading nature
- potential for duplicate styles or conflicting styles
- there must be a set of rules that determine what styles actually get applied
- The process of deciding what styles get applied is referred to as specificity.
- Rule of thumb:
    "In general, the more specific the selector,
     the higher the precedence, the more likely
     the style will be applied."


------- CSS PROPERTIES -------


Colors:
- HEX
    #FF0000 = red
    #00FF00 = green
    #0000FF = blue
    #000000 = black
    #FFFFFF = white
    #808080 = grey

    #F00 = #FF0000
    #ABC = #AABBCC
    #AAA = #AAAAAA


Useful Properties:
element { color: #F00; }                        color
element { text-decoration: underline; }         text-decoration
element { text-align: center; }                 text-align
element { text-indent: 40px; }                  test-indent
element { font-style: italic; }                 style
element { font-size: 12px; }                    size
element { font-size: 1em; }                     size
element { font-weight: bold; }                  font weight
element { background-color: #F00; }             background color
| element { background-image: url               background image
| ("http://www.example.com/images/bck.png"); }
element { background-repeat: repeat-x; }        background repeat
ol { list-style: upper-alpha; }                 list style
ul { list-style: square; }                      list style
| h2 { color: green; }                          inheriting styles
| #sidebar h2 { color: inherit; }



Font Family Properties:
element { font-family: Helvetica, Arial, Sans-Serif; }
element { font-family: "Times New Roman", Times, Serif; }
element { font-family: "Courier New", Monospace; }

- px: stands for pixels. Pixels are an absolute unit used for screen media.
- em: is a relative/dynamic unit that corresponds to the current font size.
  If the current font size is 12px, then 1em is 12px. 2em would be 24px. 0.5 em would be 6px.
  If the browser font size changes, all em values would change accordingly.









