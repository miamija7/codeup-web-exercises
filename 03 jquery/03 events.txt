
*** JQUERY - EVENTS ***


jQuery Events:
- use jQuery to attach event listeners to HTML elements
- simplifies working with different types of events across browsers
- events like a user clicking a mouse, hovering over an element, or bringing areas in and out of focus


*** MOUSE EVENTS ***

Mouse Events:
.click() — Bind an event handler to the "click" JavaScript event or trigger that event on an element
.dblclick() — Bind an event handler to the "dblclick" JavaScript event or trigger that event on an element
.hover() — Bind two handlers to the matched elements, to be executed when the mouse pointer enters and leaves the elements


Event Handlers Refresher:
- event listener/handler function is a callback function that is called when an event happens
- when called, the handler function is passed an event object
- event object contains details about the event and methods for modifying the event, ex. preventDefault
- event object can be omitted from the function definition if it is not used
- we can attach an anonymous function as a callback function
- we can attach a named function as a callback function
- anonymous function can be refactored to be a named function

    // anonymous function
    var ele = document.getElementById('my-element');
    ele.addEventListener('click', function(e) {
        alert('My element was clicked!');
    });

    // named function
    function clickHandler(e) {
        alert('My element was clicked!');
    }
    var ele = document.getElementById('my-element');
    ele.addEventListener('click', clickHandler);

    // jQuery
    $('selector').click( handler )


click():
- on click event
    $('selector').click(function() {
        alert('click event!');
    });


dbclick():
- on double click
    $('selector').dblclick(function(e) {
        alert('double click event!');
    });


hover():
- combination of mouseenter and mouseleave events
    $('selector').hover( handlerIn, handlerOut )


$(this):
- reference the selected DOM element
- available inside a callback function
- refer to the selected DOM element that triggered the event


*** KEYBOARD EVENTS ***

Keyboard Events:
.keydown() — Bind an event handler to the "keydown" JavaScript event or trigger that event on an element
.keypress() — Bind an event handler to the "keypress" JavaScript event or trigger that event on an element
.keyup() — Bind an event handler to the "keyup" JavaScript event or trigger that event on an element
.on() - method, which allows us to listen for any arbitrary event
.off() - method, which removes event listeners


keydown():
- similar to click event
    $('selector').keydown( handler )


keypress():
- similar to keydown
- exception: modifier keys (shift, control, escape, etc) being pressed will not trigger the keypress event
    $('selector').keypress( handler )


keyup():
- similar to keydown event
- keyup triggers when a key is released
    $('selector').keyup( handler(eventObject) )


on():
- listen to events
- this method takes any event listener type and a callback function
    .on('keydown', function() {});


off():
- removes event listeners from a specified element or elements
- remove event listeners for a specific event or all the event listeners

    //Remove any handlers for the click event from all elements with the class clickable
    $('.clickable').off('click');

    // Remove all event handlers from all paragraph tags
    $('p').off();


